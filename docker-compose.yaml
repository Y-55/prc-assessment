version: '3.9'


networks:
  internal_nw:
    name: internal_nw
    driver: bridge

services:
  redpanda-1:
    image: docker.vectorized.io/vectorized/redpanda:latest
    container_name: redpanda-1
    hostname: redpanda-1
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 9093:9093
      - 28082:28082
      - 29092:29092
      - 9644:9644
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 200M
      - --overprovisioned
      - --node-id
      - '0'
      - --memory
      - '2G'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-1:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-1:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-1:33145
      - --check=false
    networks:
      - internal_nw

  connect:
    image: debezium/connect:2.7
    container_name: connect
    hostname: connect
    depends_on:
      - redpanda-1
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: redpanda-1:29092
      GROUP_ID: connect-group
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_REST_PORT: 8083
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal_nw

  redpanda-console:
    image: docker.redpanda.com/vectorized/console:v2.1.1
    container_name: redpanda-console
    hostname: redpanda-console
    depends_on:
      - redpanda-1
      - connect
    ports:
      - 8080:8080
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-1:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-1:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-1:9644"]
        connect:
          enabled: true
          clusters:
            - name: cdc
              url: http://connect:8083
              # No auth configured on that cluster, hence no username/password set
    networks:
      - internal_nw

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    depends_on:
      - redpanda-1
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: news
    volumes:
      - ${PROJECT_PATH}/fs/volumes/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical" #required for MaterializedPostgreSQL
    networks:
      - internal_nw

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    hostname: clickhouse
    depends_on:
      - postgres
      - redpanda-1
    ports:
      - 9000:9000
      - 8123:8123
    user: "101:101"
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - ${PROJECT_PATH}/fs/volumes/clickhouse/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ${PROJECT_PATH}/fs/volumes/clickhouse/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ${PROJECT_PATH}/fs/volumes/clickhouse/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - internal_nw

  management:
    build:
      context: .
    command: tail -f /dev/null
    hostname: management
    depends_on:
      - redpanda-1
      - connect
      - postgres
      - clickhouse
    volumes:
      - ./prc:/app/prc
      - ./scripts:/app/scripts
      - ./.env:/app/.env
      - ./connect-configs:/app/connect-configs
      - ./dbt-clickhouse-malaa:dbt-clickhouse-malaa
    restart: on-failure:3
    stdin_open: true
    tty: true
    networks:
      - internal_nw